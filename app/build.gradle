apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "2g"
    }

    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    /*
     * Read properties from the file.
     *
     * This file contains credentials and it is not checked into Git.
     * You should create it -- see "app.properties.sample".
     */
    Properties properties = loadProperties(getRootProject().file('app.properties'))

    defaultConfig {
        applicationId "com.orgzly"
        minSdkVersion 16 // JELLY_BEAN
        targetSdkVersion 25 // Nougat (7.1)
        versionCode 86
        versionName "1.6.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "DROPBOX_APP_KEY", properties.getProperty("dropbox.app_key", '""')
        resValue "string", "dropbox_app_key_schema", properties.getProperty("dropbox.app_key_schema", '')
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "LOG_DEBUG", "false"
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"

            buildConfigField "String", "DROPBOX_TOKEN", properties.getProperty("dropbox.token", '""')
        }
    }

    flavorDimensions "store"

    productFlavors {
        premium {
            buildConfigField "boolean", "IS_DROPBOX_ENABLED", "true"

            buildConfigField "String", "VERSION_NAME_SUFFIX", '""'

            dimension "store"
        }

        fdroid {
            /*
             * Disable Dropbox.
             * Properties file which contains the required API key is not included with the code.
             */
            buildConfigField "boolean", "IS_DROPBOX_ENABLED", "false"

            buildConfigField "String", "VERSION_NAME_SUFFIX", '" (fdroid)"'

            dimension "store"
        }
    }

    lintOptions {
        disable 'MissingTranslation'

        /*
         * Added for:
         * Invalid package reference in library; not included in Android:
         * javax.servlet.http. Referenced from com.dropbox.core.DbxStandardSessionStore.
         */
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// Warning:Conflict with dependency 'com.android.support:support-annotations'. Resolved versions for app (23.1.1) and test app (23.0.1) differ.
// http://stackoverflow.com/questions/28999124/resolved-versions-for-app-22-0-0-and-test-app-21-0-3-differ
configurations.all {
    resolutionStrategy {
        force "com.android.support:design:$android_support_version"
    }
}

dependencies {
    implementation orgJavaLocation()

    implementation "com.dropbox.core:dropbox-core-sdk:$dropbox_core_sdk_version"

    implementation "com.googlecode.juniversalchardet:juniversalchardet:$juniversalchardet_version"

    implementation("com.github.machinarius:preferencefragment:$preference_fragment_version") {
        exclude module: 'support-v4'
    }

    implementation "com.evernote:android-job:$evernote_android_job_version"

    implementation "joda-time:joda-time:$joda_time_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.android.support:support-v4:$android_support_version"
    implementation "com.android.support:appcompat-v7:$android_support_version"
    implementation "com.android.support:cardview-v7:$android_support_version"
    implementation "com.android.support:recyclerview-v7:$android_support_version"
    implementation "com.android.support:design:$android_support_version"
    implementation "com.android.support.constraint:constraint-layout:$android_constraint_layout"

    androidTestImplementation "com.android.support:support-annotations:$android_support_version"

    testImplementation "junit:junit:$junit_version"

    androidTestImplementation "com.android.support.test:runner:$android_test_version"
    androidTestImplementation "com.android.support.test:rules:$android_test_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$android_test_espresso_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$android_test_espresso_version"
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:$android_test_uiautomator_version"

    androidTestImplementation "de.sven-jacobs:loremipsum:$loremipsum_version"
}

repositories {
    mavenCentral()
}

/*
 * Use local org-java directory if it exists for easier development.
 * Being more specific by looking for orgzly/org-java/ on purpose.
 */
def orgJavaLocation() {
    File localOrgJavaDir = getRootProject().file('../../orgzly/org-java')

    if (localOrgJavaDir.exists()) {
        return project(':org-java') // Defined in settings.gradle
    } else {
        return "com.orgzly:org-java:$org_java_version"
    }
}

def loadProperties(file) {
    Properties properties = new Properties()

    if (file.exists()) {
        properties.load(file.newDataInputStream())
    } else {
        logger.warn("Properties file ${file} does not exist")
    }

    return properties
}